#
# ~/.bashrc
#

[[ $- != *i* ]] && return

source "$HOME"/.private_vars
source "$HOME"/.bash_aliases

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
[ -r /usr/share/bash-completion/completions/git ] && . /usr/share/bash-completion/completions/git
if [ -x "$(command -v neac)" ]; then
    eval "$(_NEAC_COMPLETE=bash_source neac)"
fi

export VISUAL=nvim
export EDITOR=nvim
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib
export PATH=$PATH:$HOME/.local/bin

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
. "$HOME/.cargo/env"

awslogin() {
    aws sso login
    (AWS_PROFILE=prod aws codeartifact login --tool twine --domain mca --domain-owner $PROD_ACCOUNT_NUMBER --repository mca-pypi &>/dev/null &)
    (
        aws codeartifact login --tool pip --domain mca --domain-owner $PROD_ACCOUNT_NUMBER --repository mca-pypi || exit 1

        mkdir -p ~/.config/uv
        sed -nE 's/^index-url\s*=\s*(\S+)$/index-url = "\1"/p' ~/.config/pip/pip.conf >~/.config/uv/uv.toml.new
        # Preserve existing config (other than index-url) if it exists:
        if [ -e ~/.config/uv/uv.toml ]; then
            sed '/^index-url\s*=/d' ~/.config/uv/uv.toml >>~/.config/uv/uv.toml.new
        fi
        mv ~/.config/uv/uv.toml.new ~/.config/uv/uv.toml
    ) &>/dev/null &
}

# PS1
function virtualenv_info() {
    if [[ -n "$VIRTUAL_ENV" ]]; then
        venv="${VIRTUAL_ENV##*/}"
    else
        venv=''
    fi
    [[ -n "$venv" ]] && echo " {$venv}"
}

export AWS_PROFILE=nonprod

function awsprofile_info() {
    if [[ -n "$AWS_PROFILE" ]]; then
        aws="${AWS_PROFILE##*/}"
    else
        aws=''
    fi
    [[ -n "$aws" ]] && echo " [$aws]"
}

[ -r /usr/share/git/git-prompt.sh ] && source /usr/share/git/git-prompt.sh

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?} # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs} ]] &&
    type -P dircolors >/dev/null &&
    match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color}; then
    # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
    if type -P dircolors >/dev/null; then
        if [[ -f ~/.dir_colors ]]; then
            eval $(dircolors -b ~/.dir_colors)
        elif [[ -f /etc/DIR_COLORS ]]; then
            eval $(dircolors -b /etc/DIR_COLORS)
        fi
    fi

    if [[ ${EUID} == 0 ]]; then
        PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
    else
        PS1="\[\033[38;5;132m\]\u@\h:\[$(tput sgr0)\]\[\033[38;5;31m\]\w\[$(tput sgr0)\]\[\033[38;5;31m\]\$(__git_ps1)\[$(tput sgr0)\]\[\033[38;5;31m\]\$(virtualenv_info)\[$(tput sgr0)\]\[\033[38;5;31m\]\$(awsprofile_info)\[$(tput sgr0)\]\n\[$(tput sgr0)\]\[\033[38;5;132m\][\t]\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;132m\]\\$\[$(tput sgr0)\] \[$(tput sgr0)\]"
    fi

    alias ls='ls --color=auto'
    alias grep='grep --colour=auto'
    alias egrep='egrep --colour=auto'
    alias fgrep='fgrep --colour=auto'
else
    if [[ ${EUID} == 0 ]]; then
        # show root@ when we don't have colors
        PS1='\u@\h \W \$ '
    else
        PS1='\u@\h \w \$ '
    fi
fi
